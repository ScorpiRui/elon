================================================================================
                    ELON TELEGRAM BOT - DEPLOYMENT QO'LLANMASI
                    Katta Dasturchi Uchun To'liq Qo'llanma
================================================================================

üìã LOYIHA HAQIDA
================================================================================

Bu loyiha - taksi haydovchilari uchun Telegram bot bo'lib, ular o'z guruhlariga 
belgilangan intervalda xabarlar yuborish imkonini beradi.

ASOSIY FUNKSIYALAR:
‚Ä¢ Admin paneli - haydovchilarni boshqarish
‚Ä¢ Haydovchi autentifikatsiyasi - Telegram API orqali
‚Ä¢ Guruhlar papkasini tanlash
‚Ä¢ Xabar yaratish va avtomatik yuborish
‚Ä¢ Interval sozlash (2, 5, 10, 15 daqiqa)
‚Ä¢ Real-time monitoring va health check

TEXNOLOGIYA STACK:
‚Ä¢ Python 3.8+
‚Ä¢ aiogram 3.3.0 (Telegram Bot API)
‚Ä¢ Telethon 1.40.0 (Telegram Client API)
‚Ä¢ APScheduler (vazifa rejalashtirish)
‚Ä¢ JSON fayllar (ma'lumotlar saqlash)
‚Ä¢ systemd (service boshqaruvi)

================================================================================
üìÅ FAYL TUZILMASI VA JAVOBGARLIKLAR
================================================================================

ASOSIY FAYLLAR:
‚Ä¢ main.py - Bot asosiy logikasi, handlerlar, FSM flows
‚Ä¢ utils.py - Scheduler, Telethon client cache, xabar yuborish
‚Ä¢ driver_store.py - Haydovchi ma'lumotlari (JSON)
‚Ä¢ announcement_store.py - E'lon ma'lumotlari (JSON)
‚Ä¢ keyboards.py - Bot keyboardlar
‚Ä¢ config.json - Bot sozlamalari (BOT_TOKEN, ADMINS)

DEPLOYMENT FAYLLAR:
‚Ä¢ deploy.sh - Avtomatik deployment script
‚Ä¢ start_bot.sh - Bot ishga tushirish script
‚Ä¢ elon-bot.service - systemd service fayli
‚Ä¢ watchdog.service - Monitoring service

MONITORING FAYLLAR:
‚Ä¢ health_check.py - Bot holatini tekshirish
‚Ä¢ bot_watchdog.py - Avtomatik monitoring va restart
‚Ä¢ monitor_bot.py - Performance monitoring
‚Ä¢ timing_manager.py - Timing sozlamalari
‚Ä¢ timing_config.json - Timing konfiguratsiyasi
‚Ä¢ manage_timings.sh - Timing boshqaruvi

================================================================================
üîß DEPLOYMENT TALABLARI
================================================================================

SERVER TALABLARI:
‚Ä¢ Ubuntu 20.04+ yoki CentOS 8+
‚Ä¢ Python 3.8+
‚Ä¢ pip3
‚Ä¢ systemd
‚Ä¢ sudo ruxsatlari

MINIMAL RESURSLAR:
‚Ä¢ RAM: 512MB (1GB tavsiya)
‚Ä¢ CPU: 1 core (2 core tavsiya)
‚Ä¢ Disk: 1GB bo'sh joy
‚Ä¢ Internet: barqaror ulanish

PYTHON DEPENDENCIES (req.txt):
‚Ä¢ aiofiles==23.2.1
‚Ä¢ aiogram==3.3.0
‚Ä¢ APScheduler==3.11.0
‚Ä¢ Telethon==1.40.0
‚Ä¢ TgCrypto==1.2.5
‚Ä¢ psutil (monitoring uchun)

================================================================================
‚öôÔ∏è KONFIGURATSIYA SOZLAMALARI
================================================================================

config.json - ASOSIY SOZLAMALAR:
{
    "BOT_TOKEN": "YOUR_BOT_TOKEN_HERE",
    "ADMINS": [1135712336, 7883374132],
    "ENCODING_SETTINGS": {
        "DEFAULT_ENCODING": "utf-8",
        "UNICODE_NORMALIZATION": "NFC",
        "ENSURE_ASCII": false
    },
    "FOLDER_CACHE_TTL_SECONDS": 7200
}

timing_config.json - PERFORMANCE SOZLAMALARI:
{
    "timing_settings": {
        "pack_timeout_seconds": 5,
        "scheduler_interval_seconds": 30,
        "rate_limit_window_seconds": 60,
        "max_messages_per_window": 20,
        "flood_wait_retry_delay_seconds": 1,
        "cache_cleanup_interval_minutes": 1,
        "announcement_retry_delay_seconds": 10,
        "connection_timeout_seconds": 30,
        "message_send_timeout_seconds": 15
    },
    "monitoring_settings": {
        "enable_detailed_logging": true,
        "log_performance_metrics": true,
        "track_success_rates": true,
        "monitor_memory_usage": true,
        "alert_on_high_failure_rate": true,
        "failure_rate_threshold_percent": 50
    }
}

================================================================================
üöÄ DEPLOYMENT JARAYONI
================================================================================

1. SERVERGA ULASH:
   ssh root@your-server-ip
   yoki
   ssh ubuntu@your-server-ip

2. LOYIHANI YUKLASH:
   git clone <repository-url> /home/ubuntu/elon
   yoki
   scp -r . ubuntu@server:/home/ubuntu/elon/

3. DEPENDENCIES O'RNATISH:
   cd /home/ubuntu/elon
   pip3 install -r req.txt

4. KONFIGURATSIYA SOZLASH:
   nano config.json
   # BOT_TOKEN va ADMINS ni to'g'ri sozlang

5. AVTOMATIK DEPLOYMENT:
   chmod +x deploy.sh
   ./deploy.sh

6. MANUAL DEPLOYMENT:
   # Service fayllarini ko'chirish
   sudo cp elon-bot.service /etc/systemd/system/
   sudo cp watchdog.service /etc/systemd/system/
   
   # Systemd reload
   sudo systemctl daemon-reload
   
   # Service'larni enable qilish
   sudo systemctl enable elon-bot
   sudo systemctl enable watchdog

7. BOTNI ISHGA TUSHIRISH:
   sudo systemctl start elon-bot
   sudo systemctl start watchdog

================================================================================
üìä BOT BOSHQARISH BUYRUGLARI
================================================================================

ASOSIY BUYRUGLAR:
‚Ä¢ sudo systemctl start elon-bot        # Botni ishga tushirish
‚Ä¢ sudo systemctl stop elon-bot         # Botni to'xtatish
‚Ä¢ sudo systemctl restart elon-bot      # Botni qayta ishga tushirish
‚Ä¢ sudo systemctl status elon-bot       # Bot holatini tekshirish
‚Ä¢ sudo systemctl enable elon-bot       # Boot da ishga tushish
‚Ä¢ sudo systemctl disable elon-bot      # Boot da ishga tushishni o'chirish

LOGLARNI KO'RISH:
‚Ä¢ sudo journalctl -u elon-bot -f       # Live loglar
‚Ä¢ sudo journalctl -u elon-bot -n 100   # So'nggi 100 ta log
‚Ä¢ sudo journalctl -u elon-bot --since "1 hour ago"  # So'nggi 1 soat

WATCHDOG BOSHQARISH:
‚Ä¢ sudo systemctl start watchdog        # Watchdog ishga tushirish
‚Ä¢ sudo systemctl stop watchdog         # Watchdog to'xtatish
‚Ä¢ sudo systemctl status watchdog       # Watchdog holati

================================================================================
üîç MONITORING VA HEALTH CHECK
================================================================================

HEALTH CHECK BUYRUGLARI:
‚Ä¢ python3 health_check.py check        # Bir martalik tekshirish
‚Ä¢ python3 health_check.py monitor      # Uzluksiz monitoring
‚Ä¢ python3 health_check.py restart      # Service restart

WATCHDOG BUYRUGLARI:
‚Ä¢ python3 bot_watchdog.py --once       # Bir martalik tekshirish
‚Ä¢ python3 bot_watchdog.py --interval 60 --max-restarts 3  # Custom sozlamalar

PERFORMANCE MONITORING:
‚Ä¢ python3 monitor_bot.py report        # Performance hisobot
‚Ä¢ python3 monitor_bot.py status        # Bot holati
‚Ä¢ python3 monitor_bot.py monitor       # Uzluksiz monitoring

TIMING BOSHQARISH:
‚Ä¢ ./manage_timings.sh show             # Hozirgi timing sozlamalari
‚Ä¢ ./manage_timings.sh reload           # Timing konfiguratsiyasini qayta yuklash
‚Ä¢ ./manage_timings.sh set pack_timeout_seconds 10  # Timing o'zgartirish
‚Ä¢ ./manage_timings.sh report           # Performance hisobot

================================================================================
üêõ XATOLIKLARNI TUZATISH
================================================================================

UMUMIY MUAMMOLAR:

1. SERVICE ISHGA TUSHMAYDI:
   ‚Ä¢ systemctl status elon-bot
   ‚Ä¢ journalctl -u elon-bot -n 50
   ‚Ä¢ config.json faylini tekshiring
   ‚Ä¢ Python dependencies o'rnatilganligini tekshiring

2. BOT TOKEN XATOLIGI:
   ‚Ä¢ config.json da BOT_TOKEN to'g'ri ekanligini tekshiring
   ‚Ä¢ Bot @BotFather orqali yaratilganligini tekshiring

3. PERMISSION XATOLIGLARI:
   ‚Ä¢ chown -R root:root /root/elon
   ‚Ä¢ chmod -R 755 /root/elon

4. DEPENDENCIES XATOLIGI:
   ‚Ä¢ pip3 install -r req.txt --upgrade
   ‚Ä¢ pip3 install --user -r req.txt

5. MEMORY YETARLI EMAS:
   ‚Ä¢ free -h
   ‚Ä¢ swap qo'shing: fallocate -l 1G /swapfile

6. NETWORK MUAMMOLARI:
   ‚Ä¢ ping api.telegram.org
   ‚Ä¢ Firewall sozlamalarini tekshiring

7. KATTA GURUHLAR MUAMMOSI (80+ guruh):
   ‚Ä¢ Bot crash bo'lsa: timing_config.json da sozlamalarni kamaytiring
   ‚Ä¢ max_messages_per_window: 5 ga kamaytiring
   ‚Ä¢ peer_batch_size: 3 ga kamaytiring
   ‚Ä¢ batch_delay_seconds: 5 ga oshiring
   ‚Ä¢ scheduler_interval_seconds: 120 ga oshiring
   ‚Ä¢ Flood wait xatolari ko'p bo'lsa: botni restart qiling

DEPLOYMENT MUAMMOLARI:
‚Ä¢ ./deploy.sh --fix-only               # Avtomatik tuzatish
‚Ä¢ systemctl daemon-reload              # Systemd reload
‚Ä¢ systemctl reset-failed               # Failed service'larni reset

================================================================================
üìà PERFORMANCE OPTIMIZATION
================================================================================

TIMING SOZLAMALARI:
‚Ä¢ pack_timeout_seconds: 10-15 (xabar yuborish timeout)
‚Ä¢ scheduler_interval_seconds: 60-120 (scheduler tezligi - katta guruhlar uchun)
‚Ä¢ max_messages_per_window: 5-10 (rate limiting - katta guruhlar uchun kamroq)
‚Ä¢ cache_cleanup_interval_minutes: 2-5 (cache tozalash)
‚Ä¢ batch_delay_seconds: 3-5 (batch'lar orasida kutish)
‚Ä¢ peer_batch_size: 3-5 (kichik batch'lar)
‚Ä¢ max_concurrent_announcements: 2-3 (parallel e'lonlar soni)

RESOURCE LIMITS (elon-bot.service):
‚Ä¢ MemoryMax=512M                       # Maksimal memory
‚Ä¢ CPUQuota=80%                         # Maksimal CPU
‚Ä¢ LimitNOFILE=65536                    # Maksimal fayl ochish

MONITORING SOZLAMALARI:
‚Ä¢ enable_detailed_logging: true        # Batafsil loglar
‚Ä¢ log_performance_metrics: true        # Performance metrikalar
‚Ä¢ monitor_memory_usage: true           # Memory monitoring
‚Ä¢ alert_on_high_failure_rate: true     # Xatolik haqida ogohlantirish

================================================================================
üîê XAVFSIZLIK SOZLAMALARI
================================================================================

BOT TOKEN XAVFSIZLIGI:
‚Ä¢ config.json faylini faqat root/ubuntu o'qiy olsin
‚Ä¢ chmod 600 config.json
‚Ä¢ Git'da token saqlanmasin (.gitignore)

ADMIN RUXSATLARI:
‚Ä¢ ADMINS ro'yxatida faqat ishonchli ID'lar
‚Ä¢ Admin ID'larni to'g'ri olish: @userinfobot

SYSTEMD XAVFSIZLIGI:
‚Ä¢ NoNewPrivileges=true
‚Ä¢ PrivateTmp=true
‚Ä¢ ProtectSystem=strict
‚Ä¢ ProtectHome=true

NETWORK XAVFSIZLIGI:
‚Ä¢ Firewall sozlamalari
‚Ä¢ SSH key-based authentication
‚Ä¢ Fail2ban o'rnatish

================================================================================
üìã BACKUP VA RESTORE
================================================================================

BACKUP JARAYONI:
‚Ä¢ cp drivers.json drivers_backup_$(date +%Y%m%d).json
‚Ä¢ cp announcements.json announcements_backup_$(date +%Y%m%d).json
‚Ä¢ cp config.json config_backup_$(date +%Y%m%d).json

RESTORE JARAYONI:
‚Ä¢ Botni to'xtating: sudo systemctl stop elon-bot
‚Ä¢ Backup fayllarni qayta yuklang
‚Ä¢ Botni qayta ishga tushiring: sudo systemctl start elon-bot

AUTOMATIC BACKUP SCRIPT:
#!/bin/bash
BACKUP_DIR="/home/ubuntu/backups"
mkdir -p $BACKUP_DIR
cp /home/ubuntu/elon/*.json $BACKUP_DIR/
find $BACKUP_DIR -name "*.json" -mtime +7 -delete

================================================================================
üîÑ YANGILASH JARAYONI
================================================================================

1. BACKUP OLISH:
   ./backup_script.sh

2. BOTNI TO'XTATISH:
   sudo systemctl stop elon-bot
   sudo systemctl stop watchdog

3. YANGI KODNI YUKLASH:
   git pull origin main
   yoki
   scp -r new_code/ ubuntu@server:/home/ubuntu/elon/

4. DEPENDENCIES YANGILASH:
   pip3 install -r req.txt --upgrade

5. BOTNI QAYTA ISHGA TUSHIRISH:
   sudo systemctl start elon-bot
   sudo systemctl start watchdog

6. HOLATNI TEKSHIRISH:
   sudo systemctl status elon-bot
   python3 health_check.py check

================================================================================
üìû YORDAM VA SUPPORT
================================================================================

LOGLARNI YIG'ISH:
‚Ä¢ sudo journalctl -u elon-bot --since "1 hour ago" > bot_logs.txt
‚Ä¢ python3 health_check.py check > health_report.json
‚Ä¢ python3 monitor_bot.py report > performance_report.txt

DEBUG MODE:
‚Ä¢ Botni debug rejimida ishga tushirish:
  cd /home/ubuntu/elon
  python3 main.py

PERFORMANCE ANALIZ:
‚Ä¢ python3 monitor_bot.py monitor
‚Ä¢ ./manage_timings.sh report
‚Ä¢ top -p $(pgrep -f "python3.*main.py")

================================================================================
‚úÖ DEPLOYMENT TEKSHIRISH RO'YXATI
================================================================================

DEPLOYMENT DAN KEYIN:
‚ñ° sudo systemctl status elon-bot - active
‚ñ° sudo systemctl status watchdog - active
‚ñ° python3 health_check.py check - healthy
‚ñ° Bot /start buyrug'iga javob beradi
‚ñ° Admin panel ishlaydi
‚ñ° Haydovchi qo'shish ishlaydi
‚ñ° Xabar yuborish ishlaydi
‚ñ° Loglar to'g'ri yozilmoqda
‚ñ° Performance monitoring ishlaydi

HAR KUNGI TEKSHIRISH:
‚ñ° sudo systemctl status elon-bot
‚ñ° python3 health_check.py check
‚ñ° python3 monitor_bot.py report
‚ñ° Disk joyi: df -h
‚ñ° Memory: free -h
‚ñ° Log fayllar hajmi: ls -lh *.log

================================================================================
üìù QO'SHIMCHA ESLATMALAR
================================================================================

‚Ä¢ Bot faqat Linux serverlarda ishlaydi (systemd talab qilinadi)
‚Ä¢ Windows'da development uchun Docker ishlatish mumkin
‚Ä¢ Production'da faqat systemd service sifatida ishlatish tavsiya
‚Ä¢ Log fayllar avtomatik tozalanadi, lekin monitoring kerak
‚Ä¢ Performance tuning uchun timing_config.json ni sozlang
‚Ä¢ Backup jarayonini avtomatlashtiring
‚Ä¢ Security updates'larni muntazam o'tkazing

================================================================================
üéØ XULOSA
================================================================================

Bu bot production-ready va to'liq monitoring bilan jihozlangan.
Deployment jarayoni avtomatik va monitoring real-time.
Har qanday muammo uchun loglar va health check mavjud.

Muvaffaqiyatli deployment uchun yuqoridagi qadamlar bo'yicha amal qiling!

================================================================================
